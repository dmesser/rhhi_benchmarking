- name: Find DB Instances
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    engine_url: https://rhvm.microlab/ovirt-engine/api
    engine_user: admin@internal

    db_vm_tag: ds2_mysql_ansible_vm

  tasks:
    - include_vars: credentials/ovirt-credentials.yaml

    - assert:
        that:
          - engine_url is defined
          - engine_user is defined
          - engine_password is defined

    - ovirt_auth:
        url: "{{ engine_url }}"
        username: "{{ engine_user }}"
        password: "{{ engine_password }}"

    - name: Get DB VMs by tag
      ovirt_vms_facts:
        auth: "{{ ovirt_auth }}"
        pattern: "tag={{ db_vm_tag }}"
      register: ds2_vms

    - name: Get DB VM NICs by tag
      ovirt_nics_facts:
        auth: "{{ ovirt_auth }}"
        vm: "{{ item }}"
      register: ds2_nics
      loop: "{{ ds2_vms.ansible_facts.ovirt_vms|json_query('[*].name') }}"

    - set_fact:
        db_ips: "{{ ds2_nics.results|json_query('[].ansible_facts.ovirt_nics[].reported_devices[].ips[?version==`v4`].address | []') }}"

    - name: add DBs to inventory
      add_host:
        name: "{{ item }}"
        groups: db_hosts
        ansible_ssh_user: cloud-user
        ansible_ssh_pass: Ebcroot1
      with_items: "{{ db_ips }}"

- name: Initialize DB hosts
  hosts: db_hosts
  gather_facts: true
  become: true

  tasks:

    - block:

      - name: mount mysql backup on /mnt
        mount:
          path: /mnt
          fstype: xfs
          src: /dev/vdc
          opts: ro
          state: mounted

      - find:
          paths: /var/lib/mysql
          file_type: any
          pattern: "*"
        register: files_to_delete

      - name: clean mysql dir on host
        file: path={{ item }} state=absent
        with_items: "{{ files_to_delete.files }}"

      - name: start rsync job to restore database from backup
        shell: rsync -aq /mnt/ /var/lib/mysql
        async: 3600
        poll: 30

      - name: ensure correct ownership of database directory
        file:
          path: /var/lib/mysql
          recurse: yes
          owner: mysql
          group: mysql

      - name: restore selinux label on database directory
        shell: restorecon -R /var/lib/mysql

      - name: start and enable mysql
        service:
          name: mariadb
          state: started
          enabled: yes


      always:

      - mount:
          path: /mnt
          state: absent
